[build-system]
requires = ["setuptools>=45", "wheel", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "pyciat"
version = "0.1.0"
description = "PyCIAT: A Configurable Python Framework for Scalable, Multi-Model Assessment of Climate Change Impacts and Adaptations in Agriculture"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Framework Contributors", email = "contact@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

[project.urls]
Homepage = "https://github.com/username/pyciat" # Placeholder URL
Documentation = "https://username.github.io/pyciat" # Placeholder URL
Repository = "https://github.com/username/pyciat.git" # Placeholder URL
Changelog = "https://github.com/username/pyciat/blob/main/CHANGELOG.md" # Placeholder URL

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip = ["docs/"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["numpy.*", "pandas.*", "xarray.*", "matplotlib.*", "seaborn.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "docs/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = [
    ".git",
    "__pycache__",
    "docs/",
    "build/",
    "dist/",
    "*.egg-info/",
]

[tool.pylint]
max-line-length = 88
disable = [
    "C0111",  # missing-docstring
    "R0903",  # too-few-public-methods
]
good-names = ["i", "j", "k", "ex", "Run", "_", "fp", "id"]
output-format = "colorized"
ignore = ["CVS", ".git", ".hg", ".tox", ".eggs", "*.egg", "docs"]
